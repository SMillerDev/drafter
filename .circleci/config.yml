version: 2

aliases:
  - &test-base
    working_directory: /tmp/drafter
    environment:
      CXXFLAGS: '-Werror -Wno-error=unused-function'

    steps:
      - checkout
      - run: git submodule update --init --recursive
      - run:
          name: Build
          command: |
            ./configure
            make -j4
      - run:
          name: Test
          command: make test -j4

  - &tag-filter
    filters:
      tags:
        only: /^v.*/

  - &clang-debug
    run:
      name: Build drafter/debug with clang
      command: |
          ctest -j4 -S cmake/unix.cmake -DCTEST_BUILD_TYPE=Debug -DCTEST_BUILD_NAME="clang $(c++ -dumpversion)"

  - &clang-release
    run:
      name: Build drafter/release with clang
      command: |
          ctest -j4 -S cmake/unix.cmake -DCTEST_BUILD_TYPE=Release -DCTEST_BUILD_NAME="clang $(c++ -dumpversion)"

  - &gcc-debug
    run:
      name: Build drafter/debug with gcc
      command: |
          ctest -j4 -S cmake/unix.cmake -DCTEST_BUILD_TYPE=Debug -DCTEST_BUILD_NAME="gcc $(c++ -dumpversion)"

  - &gcc-release
    run:
      name: Build drafter/release with gcc
      command: |
          ctest -j4 -S cmake/unix.cmake -DCTEST_BUILD_TYPE=Release -DCTEST_BUILD_NAME="gcc $(c++ -dumpversion)"

  - &xcode-debug
    run:
      name: Build drafter/debug with xcode
      command: |
          ctest -j4 -S cmake/xcode.cmake -DCTEST_BUILD_TYPE=Debug -DCTEST_BUILD_NAME="xcode"

  - &xcode-release
    run:
      name: Build drafter/release with xcode
      command: |
          ctest -j4 -S cmake/xcode.cmake -DCTEST_BUILD_TYPE=Release -DCTEST_BUILD_NAME="xcode"

  - &update-submodules
    run:
      name: Update submodules
      command: 'git submodule update --init --recursive'

workflows:
  version: 2

  drafter:
    jobs:
      - lint
      - test-gcc-49-debug: *tag-filter
      - test-gcc-49-release: *tag-filter
      - test-gcc-latest-debug: *tag-filter
      - test-gcc-latest-release: *tag-filter
      - test-clang-4-debug: *tag-filter
      - test-clang-4-release: *tag-filter
      - test-clang-latest-debug: *tag-filter
      - test-clang-latest-release: *tag-filter
      - test-xcode9-release: *tag-filter
      - test-xcode9-debug: *tag-filter
      - test-gyp: *tag-filter
      - test-valgrind: *tag-filter
      - release:
          requires:
            - test-gcc-49-debug
            - test-gcc-49-release
            - test-gcc-latest-debug
            - test-gcc-latest-release
            - test-clang-4-debug
            - test-clang-4-release
            - test-clang-latest-debug
            - test-clang-latest-release
            - test-xcode9-release
            - test-xcode9-debug
            - test-gyp
            - test-valgrind
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/

jobs:
  lint:
    docker:
      - image: apiaryio/clang:5

    steps:
      - checkout
      - run: git submodule update --init --recursive
      - run: ./tools/clang-format-check.sh

  test-gyp:
    <<: *test-base
    docker:
      - image: gcc:5.4

  test-gcc-49-debug:
    working_directory: /tmp/drafter
    environment:
    steps:
      - checkout
      - <<: *update-submodules
      - <<: *gcc-debug
    docker:
      - image: apiaryio/drafter-ci:gcc-4.9

  test-gcc-49-release:
    working_directory: /tmp/drafter
    environment:
    steps:
      - checkout
      - <<: *update-submodules
      - <<: *gcc-release
    docker:
      - image: apiaryio/drafter-ci:gcc-4.9

  test-gcc-latest-debug:
    working_directory: /tmp/drafter
    environment:
    steps:
      - checkout
      - <<: *update-submodules
      - <<: *gcc-debug
    docker:
      - image: apiaryio/drafter-ci:gcc-latest

  test-gcc-latest-release:
    working_directory: /tmp/drafter
    environment:
    steps:
      - checkout
      - <<: *update-submodules
      - <<: *gcc-release
    docker:
      - image: apiaryio/drafter-ci:gcc-latest

  test-clang-4-debug:
    working_directory: /tmp/drafter
    environment:
    steps:
      - checkout
      - <<: *update-submodules
      - <<: *clang-debug
    docker:
      - image: apiaryio/drafter-ci:clang-4.0

  test-clang-4-release:
    working_directory: /tmp/drafter
    environment:
    steps:
      - checkout
      - <<: *update-submodules
      - <<: *clang-release
    docker:
      - image: apiaryio/drafter-ci:clang-4.0

  test-clang-latest-debug:
    working_directory: /tmp/drafter
    environment:
    steps:
      - checkout
      - <<: *update-submodules
      - <<: *clang-debug
    docker:
      - image: apiaryio/drafter-ci:clang-latest

  test-clang-latest-release:
    working_directory: /tmp/drafter
    environment:
    steps:
      - checkout
      - <<: *update-submodules
      - <<: *clang-release
    docker:
      - image: apiaryio/drafter-ci:clang-latest

  test-xcode9-debug:
    working_directory: /tmp/drafter
    environment:
    steps:
      - checkout
      - <<: *update-submodules
      - run: brew install cmake
      - <<: *xcode-debug
    macos:
      xcode: "9.4.0"

  test-xcode9-release:
    working_directory: /tmp/drafter
    environment:
    steps:
      - checkout
      - <<: *update-submodules
      - run: brew install cmake
      - <<: *xcode-release
    macos:
      xcode: "9.4.0"

  test-valgrind:
    <<: *test-base
    docker:
      - image: gcc:7

    steps:
      - checkout
      - run: git submodule update --init --recursive
      - run: apt-get update && apt-get install -y valgrind

      - run:
          name: Build
          command: |
            ./configure
            make -j4
            make test -j4

      - run:
          name: Memory Test
          command: |
            mkdir artifacts
            valgrind --leak-check=full --show-leak-kinds=definite,indirect,possible --error-exitcode=1 ./bin/test-libdrafter 2> artifacts/memcheck.log
            valgrind --leak-check=full --show-leak-kinds=definite,indirect,possible --error-exitcode=1 ./bin/test-capi 2> artifacts/memcheck-capi.log

      - store_artifacts:
          path: artifacts

  release:
    docker:
      - image: circleci/ruby:2.5.1
    working_directory: /tmp/drafter

    steps:
      - checkout
      - <<: *update-submodules
      - run: ./tools/release.sh

